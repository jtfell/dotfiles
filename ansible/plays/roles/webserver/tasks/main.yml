- name: install packages
  apt: name={{item}} state=present
  with_items:
    - nginx
    - redis-server
    - build-essential
    - g++
    - postgresql
    - libpq-dev
    - python-psycopg2

- name: install pg_hbf config
  copy: >
    src=templates/pg_hba.conf
    dest=/etc/postgresql/9.5/main/pg_hba.conf
  notify:
    - restart postgres

- name: install nginx config
  copy: >
    src=templates/nginx.conf
    dest=/etc/nginx/nginx.conf
  notify:
    - restart nginx

- name: install nginx site config
  copy: >
    src=templates/site.conf
    dest=/etc/nginx/conf.d/site.conf
  notify:
    - restart nginx

- name: Ensure apt-transport-https is installed.
  apt: name=apt-transport-https state=present

- name: Add Nodesource apt key.
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present

- name: Add NodeSource repositories for Node.js.
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
  register: node_repo

- name: Update apt cache if repo was added.
  apt: update_cache=yes
  when: node_repo.changed

- name: Ensure Node.js and npm are installed.
  apt: "name=nodejs={{ nodejs_version|regex_replace('x', '') }}* state=present"


- name: install node pm2
  npm: >
    name=pm2 
    global=yes 
    state=present
    version=2.4.2

- name: create postgres database
  postgresql_db: name={{ db_name }}
  become: yes
  become_user: postgres

- name: create ubuntu postgres user
  postgresql_user: name=ubuntu db={{ db_name }} priv=ALL
  become: yes
  become_user: postgres

- name: ensure user does not have unnecessary privilege
  postgresql_user: name=ubuntu role_attr_flags=NOSUPERUSER,NOCREATEDB
  become: yes
  become_user: postgres
